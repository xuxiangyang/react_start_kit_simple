#!/bin/bash
#会部署到/var/www/project_name/env/current
set -e
project_name="cet_web" #app名称

node_env=$1

if [[ "$node_env" == "production" ]]; then
    servers=(web19) #正式服务器名称
elif [[ "$node_env" == "sandbox" ]]; then
    servers=(web3)  #测试服务器名称
else
    echo "invalid env. example: ./deploy sandbox"
    exit 1
fi

tar_name="$project_name.tar.gz"
dir=$(date +"%Y%m%d%H%M%S")
workSpace="/var/www/$project_name/$node_env"
releasesPath="$workSpace/releases"
tarPath="$workSpace/tars"
sharePath="$workSpace/shared"
curPath="$workSpace/current"
curReleasePath="$releasesPath/$dir"

branch=$(git rev-parse --abbrev-ref HEAD)

if [ "$node_env" == "production" ]; then
    if [ "$branch" != "master" ]; then
        echo "you need checkout to master to deploy"
        exit 1
    fi
elif [ "$node_env" == "sandbox" ]; then
    if [ "$branch" != "sandbox" ]; then
        echo "you need checkout to sandbox to deploy"
        exit 1
    fi
else
    echo "invalid env"
    exit 1
fi

rm -rf build/

npm run $node_env

tar -zcvf $tar_name build/

for s in ${servers[@]};do
{
    echo "start deploy $s"
    ssh $s "mkdir -p $tarPath && mkdir -p $sharePath/log && mkdir -p $curReleasePath"
    scp $tar_name deployer@$s:$tarPath/
    ssh $s "cd $curReleasePath && tar zxf $tarPath/$tar_name && mv build/* . && rm -r build && rm -rf $curPath && ln -s $curReleasePath $curPath && cd $releasesPath && (ls -t|head -n 5;ls)|sort|uniq -u|xargs rm -rf"
    echo "finish deploy $s"
}&
done
wait
rm $tar_name
rm -r build/
